"use strict";var ApplicationConfiguration=function(){var applicationModuleName="musings",applicationModuleVendorDependencies=["ngResource","ngRoute","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("reflections"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$http","$scope","Authentication","Reflections","Comments","Likes","ReflectionUtilities",function($http,$scope,Authentication,Reflections,Comments,Likes,ReflectionUtilities){$scope.authentication=Authentication,$scope.welcomeMessage=new Date,$scope.items=[],$scope.posts=[],$scope.loading=!1,$scope.postsRefresh=function(){return location.reload(),!1},$scope.fillContent=function(post){ReflectionUtilities.setReflection(post)},window.fbAsyncInit=function(){$scope.$apply($scope.loading=!0),FB.init({appId:"639286812854499",xfbml:!0,version:"v2.1"}),FB.getLoginStatus(function(response){"connected"===response.status?FB.api("/me/statuses?limit=100&format=json",function(response){$scope.items.push(response.data),$scope.item=$scope.items[0];for(var i=0;i<$scope.item.length;i++)(void 0!=$scope.item[i].comments||void 0!=$scope.item[i].likes)&&(void 0!=$scope.item[i].comments&&$scope.item[i].comments.data.length>=10&&$scope.posts.push($scope.item[i].message),void 0!=$scope.item[i].likes&&$scope.item[i].likes.data.length>=10&&$scope.posts.push($scope.item[i].message),$scope.loading=!1);$scope.$apply()}):FB.login(function(){FB.api("/me/statuses?limit=30&format=json",function(response){$scope.items.push(response.data),$scope.item=$scope.items[0];for(var i=0;i<$scope.item.length;i++)(void 0!=$scope.item[i].comments||void 0!=$scope.item[i].likes)&&(void 0!=$scope.item[i].comments&&$scope.item[i].comments.data.length>=10&&$scope.posts.push($scope.item[i].message),void 0!=$scope.item[i].likes&&$scope.item[i].likes.data.length>=10&&$scope.posts.push($scope.item[i].message),$scope.loading=!1);$scope.$apply()})},{scope:"read_stream"})})},function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];d.getElementById(id)||(js=d.createElement(s),js.id=id,js.src="//connect.facebook.net/en_US/sdk.js",fjs.parentNode.insertBefore(js,fjs))}(document,"script","facebook-jssdk")}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("reflections").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Reflections","reflections","dropdown","/reflections(/create)?"),Menus.addSubMenuItem("topbar","reflections","All Reflections","reflections"),Menus.addSubMenuItem("topbar","reflections","Create a Reflection","reflections/create")}]),angular.module("reflections").config(["$stateProvider",function($stateProvider){$stateProvider.state("listReflections",{url:"/reflections",templateUrl:"modules/reflections/views/list-reflections.client.view.html"}).state("createReflection",{url:"/reflections/create",templateUrl:"modules/reflections/views/create-reflection.client.view.html"}).state("viewReflection",{url:"/reflections/:reflectionId",templateUrl:"modules/reflections/views/view-reflection.client.view.html"}).state("editReflection",{url:"/reflections/:reflectionId/edit",templateUrl:"modules/reflections/views/edit-reflection.client.view.html"})}]),angular.module("reflections").controller("ReflectionsController",["$scope","$stateParams","$location","Authentication","Reflections","Comments","Likes","ReflectionUtilities",function($scope,$stateParams,$location,Authentication,Reflections,Comments,Likes,ReflectionUtilities){$scope.authentication=Authentication,$scope.content=ReflectionUtilities.getReflection(),ReflectionUtilities.setReflection(""),$scope.makeComment=!1,$scope.toggleMakeComment=function(){$scope.makeComment=!$scope.makeComment},$scope.shareToFacebook=function(){FB.init({appId:"639286812854499",xfbml:!0,version:"v2.1"}),FB.getLoginStatus(function(response){if("connected"===response.status){var body=$scope.reflection.content;FB.api("/me/feed","post",{message:body},function(response){alert(!response||response.error?'Please Connect To Facebook First!(Go to "Manage Social Accounts")':"This Reflection Was Successfully Posted On Your Facebook Timeline!")})}else FB.login(function(){var body=$scope.reflection.content;FB.api("/me/feed","post",{message:body},function(response){alert(!response||response.error?'Please Connect To Facebook First!(Go to "Manage Social Accounts")':"This Reflection Was Successfully Posted On Your Facebook Timeline!")})},{scope:"publish_actions"})})},function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];d.getElementById(id)||(js=d.createElement(s),js.id=id,js.src="//connect.facebook.net/en_US/sdk.js",fjs.parentNode.insertBefore(js,fjs))}(document,"script","facebook-jssdk"),$scope.create=function(){var reflection=new Reflections({title:this.title,content:this.content});reflection.$save(function(response){$location.path("reflections/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.addComment=function(){var comment=new Comments({reflectionId:$scope.reflection._id,commentBody:this.comment});comment.$save(function(response){$scope.reflection=response},function(errorResponse){$scope.error=errorResponse.data.message}),this.comment=""},$scope.remove=function(reflection){if(reflection){reflection.$remove();for(var i in $scope.reflections)$scope.reflections[i]===reflection&&$scope.reflections.splice(i,1)}else $scope.reflection.$remove(function(){$location.path("reflections")})},$scope.update=function(){var reflection=$scope.reflection;reflection.$update(function(){$location.path("reflections/"+reflection._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.reflections=Reflections.query()},$scope.findOne=function(){$scope.reflection=Reflections.get({reflectionId:$stateParams.reflectionId})},$scope.likeReflection=function(reflection,value){var user=$scope.authentication.user;if(user){for(var i in $scope.reflections)if($scope.reflections[i]._id===reflection._id){if(1===value){for(var liked in reflection.likes)if(reflection.likes[liked].user.toString()===user._id.toString()){reflection.likes.splice(liked,1);break}$scope.reflections[i].likes.push({reflectionId:"reflectionid",user:user._id,like:1})}if(-1===value){for(var unlike in reflection.likes)if(reflection.likes[unlike].user.toString()===user._id.toString()){reflection.likes.splice(unlike,1);break}$scope.reflections[i].likes.push({reflectionId:"reflectionid",user:user._id,like:-1})}}}else $scope.voteMsg="Please sign up or sign in to like a reflection";var like=new Likes({reflectionId:reflection._id,like:value});like.$save(function(response){$scope.reflection=response},function(errorResponse){$scope.likeError=errorResponse.data.message})},$scope.countLikes=function(reflection){$scope.count=0;for(var i=0;i<reflection.likes.length;i++)$scope.count=$scope.count+reflection.likes[i].like;return $scope.count}}]),angular.module("reflections").factory("Comments",["$resource",function($resource){return $resource("reflections/:reflectionId/comments/:commentId",{reflectionId:"@reflectionId",commentId:"@_id"})}]),angular.module("reflections").factory("Likes",["$resource",function($resource){return $resource("reflections/:reflectionId/likes/:id",{reflectionId:"@reflectionId",id:"@id"},{update:{method:"PUT"}})}]),angular.module("reflections").factory("Reflections",["$resource",function($resource){return $resource("reflections/:reflectionId",{reflectionId:"@_id"},{update:{method:"PUT"}})}]).factory("ReflectionUtilities",function(){var Utils={};return Utils.setReflection=function(ref){Utils.reflection=ref},Utils.getReflection=function(){return Utils.reflection},Utils}),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/reflections"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);